1.Create Table

a.Write a SQL statement to create a table named jobs including columns job_id,
 job_title, min_salary, max_salary and check whether the max_salary should  be greater than  8000.

 use labtest;
Database changed
mysql> create table job (job_id int primary key not null auto_increment,job_title varchar (50),max_sal int check (max_sal>8000) ,min_sal int );
Query OK, 0 rows affected (0.01 sec)

mysql> desc job;
+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| job_id    | int         | NO   | PRI | NULL    | auto_increment |
| job_title | varchar(50) | YES  |     | NULL    |                |
| max_sal   | int         | YES  |     | NULL    |                |
| min_sal   | int         | YES  |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
4 rows in set (0.00 sec)


b. Write a SQL statement to create a table named countries including columns country_id, 
country_name and region_id and make sure that no countries except Italy, India and China 
will be entered in the table.
mysql> create table countries(country_id int primary key auto_increment not null,country_name varchar(30),region_id int);alter table countries modify country_name  enum( "Italy", "India"," China");
Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc countries;
+--------------+--------------------------------+------+-----+---------+----------------+
| Field        | Type                           | Null | Key | Default | Extra          |
+--------------+--------------------------------+------+-----+---------+----------------+
| country_id   | int                            | NO   | PRI | NULL    | auto_increment |
| country_name | enum('Italy','India',' China') | YES  |     | NULL    |                |
| region_id    | int                            | YES  |     | NULL    |                |
+--------------+--------------------------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)



c.Write a SQL statement to create a table job_history including columns employee_id, start_date, end_date,
 job_id and department_id and make sure that, the employee_id column does not contain any duplicate value 
at the time of insertion  .

mysql> create table job_history( employee_id int not null primary key unique, start_date date, end_date date, job_id  int , department_id int );
Query OK, 0 rows affected (0.03 sec)

mysql> desc job_history;
+---------------+------+------+-----+---------+-------+
| Field         | Type | Null | Key | Default | Extra |
+---------------+------+------+-----+---------+-------+
| employee_id   | int  | NO   | PRI | NULL    |       |
| start_date    | date | YES  |     | NULL    |       |
| end_date      | date | YES  |     | NULL    |       |
| job_id        | int  | YES  |     | NULL    |       |
| department_id | int  | YES  |     | NULL    |       |
+---------------+------+------+-----+---------+-------+
5 rows in set (0.00 sec)


2.Alter Table

a.Write a SQL statement to add a foreign key constraint named fk_job_id on job_id column of 
job_history table referencing to the primary key job_id of jobs table.

create table job_history(employee_id int primary key auto_increment unique, start_date date, end_date date,job_id int,foreign key(job_id)references jobs(job_id),department_id int);

mysql> desc job_history;
+---------------+------+------+-----+---------+----------------+
| Field         | Type | Null | Key | Default | Extra          |
+---------------+------+------+-----+---------+----------------+
| employee_id   | int  | NO   | PRI | NULL    | auto_increment |
| start_date    | date | YES  |     | NULL    |                |
| end_date      | date | YES  |     | NULL    |                |
| job_id        | int  | YES  | MUL | NULL    |                |
| department_id | int  | YES  |     | NULL    |                |
+---------------+------+------+-----+---------+----------------+
5 rows in set (0.00 sec)


b.Write a SQL statement to rename the table countries to country_new.

mysql> alter table countries rename to countries_new;
Query OK, 0 rows affected (0.01 sec)

mysql> desc countries_new;
+--------------+--------------------------------+------+-----+---------+----------------+
| Field        | Type                           | Null | Key | Default | Extra          |
+--------------+--------------------------------+------+-----+---------+----------------+
| country_id   | int                            | NO   | PRI | NULL    | auto_increment |
| country_name | enum('Italy','India',' China') | YES  |     | NULL    |                |
| region_id    | int                            | YES  |     | NULL    |                |
+--------------+--------------------------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)



c.Write a SQL statement to change the name of the column country_id to con_id, 
keeping the data type and size same.

mysql> alter table countries_new change country_id con_id int not null;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc coutries_new;
ERROR 1146 (42S02): Table 'labtest.coutries_new' doesn't exist
mysql> desc countries_new;
+--------------+--------------------------------+------+-----+---------+-------+
| Field        | Type                           | Null | Key | Default | Extra |
+--------------+--------------------------------+------+-----+---------+-------+
| con_id       | int                            | NO   | PRI | NULL    |       |
| country_name | enum('Italy','India',' China') | YES  |     | NULL    |       |
| region_id    | int                            | YES  |     | NULL    |       |
+--------------+--------------------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)



3.DML Statement

a.Write a SQL statement to insert a record with your own value into the table countries against each columns.

mysql> insert into countries_new (con_id,country_name,region_id) values(1,"India",01),(3,"Italy",03);
Query OK, 2 rows affected (0.00 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM table countries_new;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table countries_new' at line 1
mysql> SELECT * FROM  countries_new;
+--------+--------------+-----------+
| con_id | country_name | region_id |
+--------+--------------+-----------+
|      1 | India        |         1 |
|      3 | Italy        |         3 |
+--------+--------------+-----------+
2 rows in set (0.00 sec)

b.Write a SQL statement to insert 5 rows by a single insert statement into jobs table.


mysql> insert into job (job_id,job_title,min_sal,max_sal) values(1,"aaa",10000,100000),(2,"bbb",9000,15000),(3,"ccc",9000,12000),(4,"ddd",12000,20000),(5,"jjj",10000,600000);
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select * from job;
+--------+-----------+---------+---------+
| job_id | job_title | max_sal | min_sal |
+--------+-----------+---------+---------+
|      1 | aaa       |  100000 |   10000 |
|      2 | bbb       |   15000 |    9000 |
|      3 | ccc       |   12000 |    9000 |
|      4 | ddd       |   20000 |   12000 |
|      5 | jjj       |  600000 |   10000 |
+--------+-----------+---------+---------+
5 rows in set (0.00 sec)



c.Write a SQL statement to change Min_salary  to 8000 and max_Salary to 40000 for programmer.


mysql> ^C
mysql> update job set min_sal =8000 where job_title="aaa";
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from job;
+--------+-----------+---------+---------+
| job_id | job_title | max_sal | min_sal |
+--------+-----------+---------+---------+
|      1 | aaa       |  100000 |    8000 |
|      2 | bbb       |   15000 |    9000 |
|      3 | ccc       |   12000 |    9000 |
|      4 | ddd       |   20000 |   12000 |
|      5 | jjj       |  600000 |   10000 |
+--------+-----------+---------+---------+
5 rows in set (0.00 sec)
